spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.database=postgresql

spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.outOfOrder=true
spring.flyway.table=egov_localization_schema_version
spring.flyway.baseline-on-migrate=true
spring.flyway.url=jdbc:postgresql://localhost:5432/devdb
spring.flyway.locations=classpath:/db/migration/ddl
spring.flyway.enabled=false

spring.datasource.driver-class-name=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/devdb

server.port=8087
server.context-path=/localization
server.servlet.context-path=/localization


logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

spring.redis.host=localhost
spring.redis.port=6379

app.timezone=UTC

otel.traces.exporter=otlp
otel.service.name=egov-localization
otel.logs.exporter=none
otel.metrics.exporter=none
otel.exporter.otlp.endpoint=http://jaeger-collector.tracing:4318
otel.exporter.otlp.protocol=http/protobuf
otel.instrumentation.kafka.enabled=true
otel.instrumentation.kafka.experimental-span-attributes=true
otel.instrumentation.http.server.ignore-urls=/egov-localization/health,/egov-localization/promethus