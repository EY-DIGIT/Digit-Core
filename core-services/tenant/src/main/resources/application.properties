spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.driver-class-name=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
spring.datasource.url=jdbc:postgresql://localhost:5432/devdb
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.show-sql=false

flyway.enabled=true

#Set context root
server.context-path=/tenant
server.port = 8092

flyway.user=postgres
flyway.password=postgres
flyway.outOfOrder=true
flyway.table=tenant_schema_version
flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://localhost:5432/devdb
flyway.locations=db/migration/main,db/migration/seed,db/migration/dev

egov.services.tenantId = default
egov.services.moduleName = tenant
egov.services.masterDetailsName = tenants
egov.services.filterFieldName = code

egov.services.egov_mdms.hostname=http://localhost:8093/
egov.services.egov_mdms.searchpath=egov-mdms-service/v1/_search

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

otel.traces.exporter=otlp
otel.service.name=tenant-management
otel.logs.exporter=none
otel.metrics.exporter=none
otel.exporter.otlp.endpoint=http://jaeger-collector.tracing:4318
otel.exporter.otlp.protocol=http/protobuf
otel.instrumentation.kafka.enabled=true
otel.instrumentation.kafka.experimental-span-attributes=true
otel.instrumentation.http.server.ignore-urls=/tenant-management/health,/tenant-management/promethus