logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

invalid.input=Invalid input
spring.datasource.driver-class-name=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
spring.datasource.url= jdbc:postgresql://localhost:5432/rainmaker_new
spring.datasource.username=postgres
spring.datasource.password=postgres
id.generation.table=id_generator
id.sequence.overflow=IDSeqOverFlow
id.sequence.notfound=IDSeqNotFound
id.invalid.format=InvalidIDFormat
success=SUCCESSFULL
failed=FAILED
city.code.notfound=CityCodeNotFound
idformat.from.mdms = true
autocreate.new.seq = false
autocreate.request.seq = false

#Set context root
server.context-path=/egov-idgen
server.servlet.context-path=/egov-idgen
server.port=8088

management.endpoints.web.base-path=/

mdms.service.host=https://dev.digit.org/
mdms.service.search.uri=egov-mdms-service/v1/_search

id.timezone=IST
otel.traces.exporter=otlp
otel.service.name=egov-idgen
otel.logs.exporter=none
otel.metrics.exporter=none
otel.exporter.otlp.endpoint=http://jaeger-collector.tracing:4318
otel.exporter.otlp.protocol=http/protobuf
otel.instrumentation.kafka.enabled=true
otel.instrumentation.kafka.experimental-span-attributes=true
otel.instrumentation.http.server.ignore-urls=/egov-idgen/health,/egov-idgen/promethus