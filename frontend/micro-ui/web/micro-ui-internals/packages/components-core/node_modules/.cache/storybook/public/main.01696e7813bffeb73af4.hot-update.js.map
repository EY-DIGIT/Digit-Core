{"version":3,"file":"main.01696e7813bffeb73af4.hot-update.js","sources":["webpack:///./src/atoms/ButtonSelector.js","webpack:///./src/atoms/CardText.js","webpack:///./src/atoms/HorizontalNav.js","webpack:///./src/atoms/Paragraph.js","webpack:///./src/atoms/Toast.js","webpack:///./src/atoms/index.js","webpack:///./src/hoc/stories/Amount.stories.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ButtonSelector = (props) => {\n  let theme = \"selector-button-primary\";\n  switch (props.theme) {\n    case \"border\":\n      theme = \"selector-button-border\";\n      break;\n    default:\n      theme = \"selector-button-primary\";\n      break;\n  }\n  return (\n    <button\n      className={props.isDisabled ? \"selector-button-primary-disabled\" : theme}\n      type={props.type || \"submit\"}\n      form={props.formId}\n      onClick={props.onSubmit}\n      disabled={props.isDisabled}\n      style={props.style ? props.style : null}\n    >\n      <h2 style={{ ...props?.textStyles, ...{ width: \"100%\" } }}>{props.label}</h2>\n    </button>\n  );\n};\n\nButtonSelector.propTypes = {\n  /**\n   * ButtonSelector content\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * button border theme\n   */\n  theme: PropTypes.string,\n  /**\n   * click handler\n   */\n  onSubmit: PropTypes.func,\n};\n\nButtonSelector.defaultProps = {\n  label: \"\",\n  theme: \"\",\n  onSubmit: undefined,\n};\n\nexport default ButtonSelector;\n","import React from \"react\";\n\nconst CardText = (props) => {\n  return (\n    <p className={`digit-card-text ${props.disable && \"disabled\"} ${props?.className ? props?.className : \"\"}`} style={props.style}>\n      {props.children}\n    </p>\n  );\n};\n\nexport default CardText;\n","import React, {useState} from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst HorizontalNav = ({ configNavItems, activeLink, setActiveLink, showNav = false, children, customStyle = {}, customClassName = \"\", inFormComposer = true, navClassName = \"\", navStyles = {} }) => {\n    const { t } = useTranslation()\n\n    const setActive = (item) => {\n        setActiveLink(item.name)\n    }\n\n    const MenuItem = ({ item }) => {\n        let itemComponent = item.code;\n\n        const Item = () => (\n            <span className=\"menu-item\">\n                <div className=\"menu-label\">{t(itemComponent)}</div>\n            </span>\n        );\n\n        return (\n            <Item />\n        );\n    };\n  return (\n      <div className={navClassName} style={{...navStyles}}>\n          {showNav && <div className={`horizontal-nav ${customClassName}`} style={inFormComposer?{ marginLeft: \"16px\", marginRight: \"16px\", ...customStyle }:{...customStyle}} >\n              {configNavItems?.map((item, index) => (\n                  <div className={`sidebar-list ${activeLink === item.name ? \"active\" : \"\"}`} key={index} onClick={() => setActive(item)}>\n                      <MenuItem item={item} />\n                  </div>\n              ))}\n          </div>\n        }\n        {children}\n    </div>\n  )\n}\n\nexport default HorizontalNav","import React from \"react\";\n\nconst Paragraph = (props) => {\n  const {value, customClassName, customStyle, inputRef} = props;\n\n  return (\n    <p className={`digit-paragraph ${customClassName}`} style={customStyle} ref={inputRef}>{value}</p>\n  )\n}\n\nexport default Paragraph;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SVG } from \"./SVG\";\nimport ButtonSelector from \"./ButtonSelector\";\n\nconst Toast = (props) => {\n  if (props.error) {\n    return (\n      <div className=\"toast-success\" style={{ backgroundColor: \"red\", ...props.style }}>\n        <SVG.Error />\n        <h2 style={{...props.labelstyle}}>{props.label}</h2>\n        { props.isDleteBtn ? <SVG.Delete fill=\"none\" className=\"toast-close-btn\" onClick={props.onClose} /> : null }\n      </div>\n    );\n  }\n\n  if (props.warning) {\n    return (\n      <div>\n        <div className=\"toast-success\" style={props?.isWarningButtons ? { backgroundColor: \"#EA8A3B\", display: \"block\", ...props.style } : { backgroundColor: \"#EA8A3B\", ...props.style }}>\n          {!props?.isWarningButtons ?\n            <div className=\"toast-success\" style={{ backgroundColor: \"#EA8A3B\", ...props.style }}>\n              <SVG.Error />\n              <h2 style={{ marginLeft: \"10px\" }}>{props.label}</h2>\n              {props.isDleteBtn ? <SVG.Delete fill=\"none\" className=\"toast-close-btn\" onClick={props.onClose} /> : null}\n            </div> : <div style={{ display: \"flex\" }}>\n              <SVG.Error />\n              <h2 style={{ marginLeft: \"10px\" }}>{props.label}</h2>\n              {props.isDleteBtn ? <SVG.Delete fill=\"none\" className=\"toast-close-btn\" onClick={props.onClose} /> : null}\n            </div>\n          }\n          {props?.isWarningButtons ?\n            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\n              <ButtonSelector theme=\"border\" label={\"NO\"} onSubmit={props.onNo} style={{ marginLeft: \"10px\" }} />\n              <ButtonSelector label={\"YES\"} onSubmit={props.onYes} style={{ marginLeft: \"10px\" }} />\n            </div> : null\n          }\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"toast-success\" style={{ ...props.style }}>\n      <SVG.CheckCircle />\n      <h2>{props.label}</h2>\n      <SVG.Delete fill=\"none\" className=\"toast-close-btn\" onClick={props.onClose} />\n    </div>\n  );\n};\n\nToast.propTypes = {\n  label: PropTypes.string,\n  onClose: PropTypes.func,\n  isDleteBtn: PropTypes.bool\n};\n\nToast.defaultProps = {\n  label: \"\",\n  onClose: undefined,\n  isDleteBtn: false\n};\n\nexport default Toast;\n","import { SVG } from \"./SVG\";\nimport ActionBar from \"./ActionBar\";\nimport ActionLinks from \"./ActionLinks\";\nimport Amount from \"./Amount\";\nimport AppContainer from \"./AppContainer\";\nimport Banner from \"./Banner\";\nimport BodyContainer from \"./BodyContainer\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport BreakLine from \"./BreakLine\";\nimport BackButton from \"./BackButton\";\nimport Button from \"./Button\";\nimport Card from \"./Card\";\nimport CheckBox from \"./CheckBox\";\nimport CollapseAndExpandGroups from \"./CollapseAndExpandGroups\";\nimport { ConnectingCheckPoints } from \"./ConnectingCheckPoints\";\nimport DatePicker from \"./DatePicker\";\nimport DisplayPhotos from \"./DisplayPhotos\";\nimport Dropdown from \"./Dropdown\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Header from \"./Header\";\nimport InfoBanner from \"./InfoBanner\";\nimport KeyNote from \"./KeyNote\";\nimport { Loader } from \"./Loader\";\nimport { LoaderScreen } from \"./LoaderScreen\";\nimport MobileNumber from \"./MobileNumber\";\nimport MultiSelectDropdown from \"./MultiSelectDropdown\";\nimport NoResultsFound from \"./NoResultsFound\";\nimport OTPInput from \"./OTPInput\";\nimport PopUp from \"./PopUp\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport RadioButtons from \"./RadioButtons\";\nimport Rating from \"./Rating\";\nimport RemoveableTag from \"./RemoveableTag\";\nimport Telephone from \"./Telephone\";\nimport TextArea from \"./TextArea\";\nimport TextInput from \"./TextInput\";\nimport UploadFile from \"./UploadFile\";\nimport HorizontalNav from \"./HorizontalNav\";\nimport CardText from \"./CardText\";\nimport Toast from \"./Toast\";\nimport Paragraph from \"./Paragraph\";\nimport CardLabel from \"./CardLabel\";\nimport CardLabelError from \"./CardLabelError\";\nimport CitizenInfoLabel from \"./CitizenInfoLabel\";\nimport LabelFieldPair from \"./LabelFieldPair\";\nimport InputTextAmount from \"./InputTextAmount\";\n\nexport {\n  InputTextAmount,\n  CardLabel,\n  CardLabelError,\n  CitizenInfoLabel,\n  Paragraph,\n  LabelFieldPair,\n  HorizontalNav,\n  Toast,\n  CardText,\n  SVG,\n  ActionBar,\n  ActionLinks,\n  Amount,\n  AppContainer,\n  BackButton,\n  Banner,\n  BodyContainer,\n  BreadCrumb,\n  BreakLine,\n  Button,\n  Card,\n  CheckBox,\n  CollapseAndExpandGroups,\n  ConnectingCheckPoints,\n  DatePicker,\n  DisplayPhotos,\n  Dropdown,\n  ErrorMessage,\n  Header,\n  InfoBanner,\n  KeyNote,\n  Loader,\n  LoaderScreen,\n  MobileNumber,\n  MultiSelectDropdown,\n  NoResultsFound,\n  OTPInput,\n  PopUp,\n  PrivateRoute,\n  RadioButtons,\n  Rating,\n  RemoveableTag,\n  Telephone,\n  TextArea,\n  TextInput,\n  UploadFile,\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Amount } from \\\"../../atoms\\\";\\n\\nexport default {\\n  title: \\\"Atoms-group/Amounts\\\",\\n  component: Amount,\\n  argTypes: {\\n    className: {\\n      control: \\\"text\\\",\\n    },\\n    style: {\\n      control: { type: \\\"object\\\" },\\n    },\\n    roundOff: {\\n      control: { type: \\\"boolean\\\" },\\n    },\\n    value: {\\n      control: { type: \\\"number\\\" },\\n    },\\n  },\\n};\\n\\nconst Template = (args) => <Amount {...args} />;\\n\\nexport const Playground = Template.bind({});\\nPlayground.args = {\\n  className: \\\"custom-class\\\",\\n  style: { color: \\\"green\\\" },\\n  roundOff: true,\\n  value: 550010,\\n};\\n\\nexport const Primary = Template.bind({});\\nPlayground.args = {\\n  value: 55000,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Playground\":{\"startLoc\":{\"col\":17,\"line\":23},\"endLoc\":{\"col\":47,\"line\":23},\"startBody\":{\"col\":17,\"line\":23},\"endBody\":{\"col\":47,\"line\":23}},\"Primary\":{\"startLoc\":{\"col\":17,\"line\":23},\"endLoc\":{\"col\":47,\"line\":23},\"startBody\":{\"col\":17,\"line\":23},\"endBody\":{\"col\":47,\"line\":23}}};\n    \nimport React from \"react\";\nimport { Amount } from \"../../atoms\";\n\nexport default {\n  title: \"Atoms-group/Amounts\",\n  component: Amount,\n  argTypes: {\n    className: {\n      control: \"text\",\n    },\n    style: {\n      control: { type: \"object\" },\n    },\n    roundOff: {\n      control: { type: \"boolean\" },\n    },\n    value: {\n      control: { type: \"number\" },\n    },\n  },\n};\n\nconst Template = (args) => <Amount {...args} />;\n\nexport const Playground = Template.bind({});;\nPlayground.args = {\n  className: \"custom-class\",\n  style: { color: \"green\" },\n  roundOff: true,\n  value: 550010,\n};\n\nexport const Primary = Template.bind({});\nPlayground.args = {\n  value: 55000,\n};\n\n\n\nPlayground.parameters = { storySource: { source: \"(args) => <Amount {...args} />\" }, ...Playground.parameters };\nPrimary.parameters = { storySource: { source: \"(args) => <Amount {...args} />\" }, ...Primary.parameters };"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAtBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAGA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AA5CA;AA8CA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}